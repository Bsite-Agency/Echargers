<?xml version="1.0" encoding="UTF-8"?>
<repository file_format="ICF" version="1.0"><element id="1682936141">
<meta><title>product-slider</title><description> 2023.05.01 12:15:41</description><icon encoding="base64"></icon><language name="pol"/></meta>
<classification><type name="snippets_campaign"/></classification>
<settings/><contents><content type="title">product-slider-script</content><content type="text_main_0"><![CDATA[function checkForLoadedSliders(){
    console.log("check")
    if (document.querySelector("div.product > a > img") != undefined){
        enableArrowScroll();
    } 
    else{
        setTimeout(checkForLoadedSliders, 500);
    }
    
}

function enableArrowScroll(){
        let Hotspots1 = document.querySelectorAll('section.hotspot');

    Hotspots1.forEach((hotspot) => {
        let productSlider = hotspot.querySelector("div.products.d-flex.flex-wrap");
        let arrowLeft = document.createElement("button");
        arrowLeft.classList.add("arrow", "arrow-left");
        let arrowRight = document.createElement("button");
        arrowRight.classList.add("arrow", "arrow-right");
        hotspot.prepend(arrowLeft);
        hotspot.append(arrowRight);

        let step = productSlider.querySelector("div.product").offsetWidth + parseInt(window.getComputedStyle(productSlider).gap);

        function changeStep() {
            step = productSlider.querySelector("div.product").offsetWidth + parseFloat(window.getComputedStyle(productSlider).gap);
            console.log(step)

            if (productSlider.scrollWidth != productSlider.offsetWidth) {
                fadersHandler();
            }
            else {
                hotspot.classList.add("hidden-f")
                hotspot.classList.add("hidden-e")
            }
        }

        new ResizeObserver(changeStep).observe(productSlider)


        productSlider.addEventListener('scroll', () => {
            fadersHandler();
        })

        function fadersHandler(){
            if (productSlider.scrollLeft > step / 50) {
                hotspot.classList.remove("hidden-f")
            }
            else {
                hotspot.classList.add("hidden-f")
            }

            if (productSlider.clientWidth > productSlider.scrollWidth - productSlider.scrollLeft - (step / 50)) {
                hotspot.classList.add("hidden-e")
            }
            else {
                hotspot.classList.remove("hidden-e")
            }
        }

        
        arrowLeft.addEventListener('click', () => {
            scrollPossibleInThatDirection = productSlider.scrollLeft - step;
            if (scrollPossibleInThatDirection < step * 0.5) {
                productSlider.scrollLeft -= step + scrollPossibleInThatDirection;
            }
            else productSlider.scrollLeft -= step;
        })
        arrowRight.addEventListener('click', () => {
            scrollPossibleInThatDirection = productSlider.scrollWidth - productSlider.scrollLeft - productSlider.clientWidth - step;
            if (scrollPossibleInThatDirection < step * 0.5) {
                productSlider.scrollLeft += step + scrollPossibleInThatDirection;
            }
            else productSlider.scrollLeft += step;
        })
})}

checkForLoadedSliders();]]></content><content type="active">normal_mobile</content><content type="format">js</content><content type="region">body_bottom</content><content type="client_type">all</content><content type="clients_with_rebate_code">all</content><content type="clients_subscribed">all</content><content type="clients_with_orders">all</content><content type="auto_block">y</content><content type="site">index;</content><content type="timeout">1</content><content type="display_dynamically">yes</content><content type="snippet_activated">yes</content><content type="only_support">no</content></contents>
<enclosures> </enclosures>
</element>
</repository>